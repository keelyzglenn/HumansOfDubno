@{
    ViewData["Title"] = "Paging";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model PaginatedList<Dubno.Models.Post>

<div class="container">
    <br />
    <br />
    <br />
    <div class="row">
        <form asp-action="Paging" method="get">
            <div class="form-actions no-color">
                <p>
                    Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                    <input type="submit" value="Search" class="btn btn-default" /> |
                    <a asp-action="Paging">Back to Full List</a>
                </p>
            </div>
        </form>
        <a asp-action="Paging" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a>
        <a asp-action="Paging" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Enrollment Date</a>
   
     </div>

    <div class="row">
        @foreach (var post in Model)
        {

            @if (post.Approved == true && post.Pending == false)
            {



                <div class="col-md-4">
                    <div class="post">
                        <a href="@Url.Action("Details","Home", new { id = post.PostId })">
                            <div class="pi-img-wrapper">
                                <img src="@post.ImageName" class="img-responsive">
                            </div>
                            <h4>@post.Title</h4>

                            <h5>@post.Description</h5>
                            <h5>@post.City, @post.State</h5>
                            <h5>@post.PostDate</h5>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <p>@Html.ActionLink("Delete", "Delete", new { id = post.PostId })</p>

                            }

                        </a>
                    </div>
                </div>
            }

        }
        <div class="row">



@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-controller="Home" asp-action="Paging"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-controller="Home" asp-action="Paging"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

        </div>
    </div>
</div>
